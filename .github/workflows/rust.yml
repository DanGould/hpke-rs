name: Build & Test

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup MacOS
      if: matrix.os == 'macos-latest'
      run: |
        sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
        sudo xcode-select -s /Applications/Xcode_12.4.app
        rustup target install aarch64-apple-darwin
        rustup target install aarch64-apple-ios
    - name: Run tests
      # Always enabling rust crypto AES for now.
      run: cargo test --verbose --features rust-crypto
    - name: Run tests all features
      # Always enabling rust crypto AES for now.
      run: cargo test --verbose --all-features
      # Release
    - name: Build Release
      run: cargo build --release --verbose
    - name: Run tests all features
      # Always enabling rust crypto AES for now.
      run: cargo test --release --verbose --all-features
    - name: Apple Silicon Build
      if: matrix.os == 'macos-latest'
      run: |
        cargo build --target aarch64-apple-darwin --tests --verbose --features rust-crypto
        cargo build --release --target aarch64-apple-darwin --tests --verbose --features rust-crypto
    - name: iOS build
      if: matrix.os == 'macos-latest'
      run: |
        cargo build --target aarch64-apple-ios --tests --verbose --features rust-crypto
        cargo build --release --target aarch64-apple-ios --tests --verbose --features rust-crypto
  fuzz:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-fuzz
          version: latest
      - name: Fuzz AEAD
        run: cargo fuzz run base -- -runs=10000
